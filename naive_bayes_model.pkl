import pandas as pd
from sklearn.naive_bayes import GaussianNB
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# Load the GHPR dataset (replace with your actual path)
ghpr_data = pd.read_csv("ghprdata.csv")

# Features (replace with relevant columns from your dataset)
X = ghpr_data[["cbo", "wmc", "dit", "rfc", "lcom", "totalMethods", "totalFields", "nosi", "loc", "returnQty", "loopQty"]]
y = ghpr_data["Defective"]  # Binary label (1 = defective, 0 = non-defective)

# Split data into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize the FDNB model
fdnb_model = GaussianNB()

# Train the model
fdnb_model.fit(X_train, y_train)

# Predictions on test set
y_pred = fdnb_model.predict(X_test)

# Evaluate accuracy
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy:.2f}")
